const hre = require("hardhat");

async function main() {
  console.log("üöÄ –î–µ–ø–ª–æ–π —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞...");

  // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç
  const TestContract = await hre.ethers.getContractFactory("TestContract");
  
  // –î–µ–ø–ª–æ–∏–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç
  const testContract = await TestContract.deploy();
  await testContract.waitForDeployment();

  const contractAddress = await testContract.getAddress();
  
  console.log("‚úÖ –ö–æ–Ω—Ç—Ä–∞–∫—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–¥–µ–ø–ª–æ–µ–Ω!");
  console.log(`üìç –ê–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞: ${contractAddress}`);
  console.log(`üîó Chain ID: ${hre.network.config.chainId}`);
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç
  console.log("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç...");
  
  const initialValue = await testContract.getValue();
  console.log(`üìä –ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${initialValue}`);
  
  const owner = await testContract.getOwner();
  console.log(`üë§ –í–ª–∞–¥–µ–ª–µ—Ü –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞: ${owner}`);
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
  const tx = await testContract.setValue(42);
  await tx.wait();
  
  const newValue = await testContract.getValue();
  console.log(`üìä –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${newValue}`);
  
  console.log("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!");
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–ø–ª–æ–µ:", error);
    process.exit(1);
  });